// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ItemBaseConfig.proto

#ifndef PROTOBUF_ItemBaseConfig_2eproto__INCLUDED
#define PROTOBUF_ItemBaseConfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "ConfigTypeGroup.pb.h"
// @@protoc_insertion_point(includes)

namespace ProConfigSpace {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ItemBaseConfig_2eproto();
void protobuf_AssignDesc_ItemBaseConfig_2eproto();
void protobuf_ShutdownFile_ItemBaseConfig_2eproto();

class ItemBaseConfig;

enum ItemBaseConfig_ITEM_TYPE {
  ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_4 = 4,
  ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_1 = 1,
  ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_2 = 2,
  ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_3 = 3
};
bool ItemBaseConfig_ITEM_TYPE_IsValid(int value);
const ItemBaseConfig_ITEM_TYPE ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_MIN = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_1;
const ItemBaseConfig_ITEM_TYPE ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_MAX = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_4;
const int ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_ARRAYSIZE = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ItemBaseConfig_ITEM_TYPE_descriptor();
inline const ::std::string& ItemBaseConfig_ITEM_TYPE_Name(ItemBaseConfig_ITEM_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ItemBaseConfig_ITEM_TYPE_descriptor(), value);
}
inline bool ItemBaseConfig_ITEM_TYPE_Parse(
    const ::std::string& name, ItemBaseConfig_ITEM_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ItemBaseConfig_ITEM_TYPE>(
    ItemBaseConfig_ITEM_TYPE_descriptor(), name, value);
}
// ===================================================================

class ItemBaseConfig : public ::google::protobuf::Message {
 public:
  ItemBaseConfig();
  virtual ~ItemBaseConfig();

  ItemBaseConfig(const ItemBaseConfig& from);

  inline ItemBaseConfig& operator=(const ItemBaseConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ItemBaseConfig& default_instance();

  void Swap(ItemBaseConfig* other);

  // implements Message ----------------------------------------------

  ItemBaseConfig* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ItemBaseConfig& from);
  void MergeFrom(const ItemBaseConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ItemBaseConfig_ITEM_TYPE ITEM_TYPE;
  static const ITEM_TYPE ITEM_TYPE_4 = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_4;
  static const ITEM_TYPE ITEM_TYPE_1 = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_1;
  static const ITEM_TYPE ITEM_TYPE_2 = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_2;
  static const ITEM_TYPE ITEM_TYPE_3 = ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_3;
  static inline bool ITEM_TYPE_IsValid(int value) {
    return ItemBaseConfig_ITEM_TYPE_IsValid(value);
  }
  static const ITEM_TYPE ITEM_TYPE_MIN =
    ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_MIN;
  static const ITEM_TYPE ITEM_TYPE_MAX =
    ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_MAX;
  static const int ITEM_TYPE_ARRAYSIZE =
    ItemBaseConfig_ITEM_TYPE_ITEM_TYPE_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ITEM_TYPE_descriptor() {
    return ItemBaseConfig_ITEM_TYPE_descriptor();
  }
  static inline const ::std::string& ITEM_TYPE_Name(ITEM_TYPE value) {
    return ItemBaseConfig_ITEM_TYPE_Name(value);
  }
  static inline bool ITEM_TYPE_Parse(const ::std::string& name,
      ITEM_TYPE* value) {
    return ItemBaseConfig_ITEM_TYPE_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .ProConfigSpace.ConfigTypeGroup show = 5;
  inline int show_size() const;
  inline void clear_show();
  static const int kShowFieldNumber = 5;
  inline const ::ProConfigSpace::ConfigTypeGroup& show(int index) const;
  inline ::ProConfigSpace::ConfigTypeGroup* mutable_show(int index);
  inline ::ProConfigSpace::ConfigTypeGroup* add_show();
  inline const ::google::protobuf::RepeatedPtrField< ::ProConfigSpace::ConfigTypeGroup >&
      show() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProConfigSpace::ConfigTypeGroup >*
      mutable_show();

  // repeated int32 sell = 4;
  inline int sell_size() const;
  inline void clear_sell();
  static const int kSellFieldNumber = 4;
  inline ::google::protobuf::int32 sell(int index) const;
  inline void set_sell(int index, ::google::protobuf::int32 value);
  inline void add_sell(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      sell() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_sell();

  // optional int32 itemid = 1;
  inline bool has_itemid() const;
  inline void clear_itemid();
  static const int kItemidFieldNumber = 1;
  inline ::google::protobuf::int32 itemid() const;
  inline void set_itemid(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProConfigSpace.ItemBaseConfig)
 private:
  inline void set_has_itemid();
  inline void clear_has_itemid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProConfigSpace::ConfigTypeGroup > show_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > sell_;
  ::std::string* name_;
  ::google::protobuf::int32 itemid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ItemBaseConfig_2eproto();
  friend void protobuf_AssignDesc_ItemBaseConfig_2eproto();
  friend void protobuf_ShutdownFile_ItemBaseConfig_2eproto();

  void InitAsDefaultInstance();
  static ItemBaseConfig* default_instance_;
};
// ===================================================================


// ===================================================================

// ItemBaseConfig

// repeated .ProConfigSpace.ConfigTypeGroup show = 5;
inline int ItemBaseConfig::show_size() const {
  return show_.size();
}
inline void ItemBaseConfig::clear_show() {
  show_.Clear();
}
inline const ::ProConfigSpace::ConfigTypeGroup& ItemBaseConfig::show(int index) const {
  return show_.Get(index);
}
inline ::ProConfigSpace::ConfigTypeGroup* ItemBaseConfig::mutable_show(int index) {
  return show_.Mutable(index);
}
inline ::ProConfigSpace::ConfigTypeGroup* ItemBaseConfig::add_show() {
  return show_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProConfigSpace::ConfigTypeGroup >&
ItemBaseConfig::show() const {
  return show_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProConfigSpace::ConfigTypeGroup >*
ItemBaseConfig::mutable_show() {
  return &show_;
}

// repeated int32 sell = 4;
inline int ItemBaseConfig::sell_size() const {
  return sell_.size();
}
inline void ItemBaseConfig::clear_sell() {
  sell_.Clear();
}
inline ::google::protobuf::int32 ItemBaseConfig::sell(int index) const {
  return sell_.Get(index);
}
inline void ItemBaseConfig::set_sell(int index, ::google::protobuf::int32 value) {
  sell_.Set(index, value);
}
inline void ItemBaseConfig::add_sell(::google::protobuf::int32 value) {
  sell_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ItemBaseConfig::sell() const {
  return sell_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ItemBaseConfig::mutable_sell() {
  return &sell_;
}

// optional int32 itemid = 1;
inline bool ItemBaseConfig::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ItemBaseConfig::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ItemBaseConfig::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ItemBaseConfig::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 ItemBaseConfig::itemid() const {
  return itemid_;
}
inline void ItemBaseConfig::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
}

// optional string name = 2;
inline bool ItemBaseConfig::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ItemBaseConfig::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ItemBaseConfig::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ItemBaseConfig::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& ItemBaseConfig::name() const {
  return *name_;
}
inline void ItemBaseConfig::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ItemBaseConfig::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void ItemBaseConfig::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* ItemBaseConfig::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* ItemBaseConfig::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void ItemBaseConfig::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProConfigSpace

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProConfigSpace::ItemBaseConfig_ITEM_TYPE>() {
  return ::ProConfigSpace::ItemBaseConfig_ITEM_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ItemBaseConfig_2eproto__INCLUDED
